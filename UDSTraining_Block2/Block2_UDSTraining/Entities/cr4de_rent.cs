//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace UDS.Study
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum cr4de_rentState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// payment for the use of property
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cr4de_rent")]
	public partial class cr4de_rent : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cr4de_rent() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cr4de_rent";
		
		public const string EntitySchemaName = "cr4de_rent";
		
		public const string PrimaryIdAttribute = "cr4de_rentid";
		
		public const string PrimaryNameAttribute = "cr4de_name";
		
		public const string EntityLogicalCollectionName = "cr4de_rents";
		
		public const string EntitySetName = "cr4de_rents";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Actual pickup date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_actualpickup")]
		public System.Nullable<System.DateTime> cr4de_Actualpickup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cr4de_actualpickup");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Actualpickup");
				this.SetAttributeValue("cr4de_actualpickup", value);
				this.OnPropertyChanged("cr4de_Actualpickup");
			}
		}
		
		/// <summary>
		/// Actual return date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_actualreturn")]
		public System.Nullable<System.DateTime> cr4de_Actualreturn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cr4de_actualreturn");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Actualreturn");
				this.SetAttributeValue("cr4de_actualreturn", value);
				this.OnPropertyChanged("cr4de_Actualreturn");
			}
		}
		
		/// <summary>
		/// car
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_car")]
		public Microsoft.Xrm.Sdk.EntityReference cr4de_Car
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cr4de_car");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Car");
				this.SetAttributeValue("cr4de_car", value);
				this.OnPropertyChanged("cr4de_Car");
			}
		}
		
		/// <summary>
		/// Car class
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_carclass")]
		public Microsoft.Xrm.Sdk.EntityReference cr4de_CarClass
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cr4de_carclass");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_CarClass");
				this.SetAttributeValue("cr4de_carclass", value);
				this.OnPropertyChanged("cr4de_CarClass");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_customer")]
		public Microsoft.Xrm.Sdk.EntityReference cr4de_Customer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cr4de_customer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Customer");
				this.SetAttributeValue("cr4de_customer", value);
				this.OnPropertyChanged("cr4de_Customer");
			}
		}
		
		/// <summary>
		/// The name of the Rent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_name")]
		public string cr4de_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cr4de_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_name");
				this.SetAttributeValue("cr4de_name", value);
				this.OnPropertyChanged("cr4de_name");
			}
		}
		
		/// <summary>
		/// yes or no
///paid or no
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_paid")]
		public System.Nullable<bool> cr4de_Paid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cr4de_paid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Paid");
				this.SetAttributeValue("cr4de_paid", value);
				this.OnPropertyChanged("cr4de_Paid");
			}
		}
		
		/// <summary>
		/// Pickup location
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_pickuplocation")]
		public virtual cr4de_rent_cr4de_Pickuplocation? cr4de_Pickuplocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cr4de_rent_cr4de_Pickuplocation?)(EntityOptionSetEnum.GetEnum(this, "cr4de_pickuplocation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Pickuplocation");
				this.SetAttributeValue("cr4de_pickuplocation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("cr4de_Pickuplocation");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_pickupreport")]
		public Microsoft.Xrm.Sdk.EntityReference cr4de_Pickupreport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cr4de_pickupreport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Pickupreport");
				this.SetAttributeValue("cr4de_pickupreport", value);
				this.OnPropertyChanged("cr4de_Pickupreport");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_price")]
		public Microsoft.Xrm.Sdk.Money cr4de_Price
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cr4de_price");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Price");
				this.SetAttributeValue("cr4de_price", value);
				this.OnPropertyChanged("cr4de_Price");
			}
		}
		
		/// <summary>
		/// Value of the Price in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_price_base")]
		public Microsoft.Xrm.Sdk.Money cr4de_price_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cr4de_price_base");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_rentid")]
		public System.Nullable<System.Guid> cr4de_rentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cr4de_rentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_rentId");
				this.SetAttributeValue("cr4de_rentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("cr4de_rentId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_rentid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.cr4de_rentId = value;
			}
		}
		
		/// <summary>
		/// reserved act of relinquishing property
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_reservedhandover")]
		public System.Nullable<System.DateTime> cr4de_Reservedhandover
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cr4de_reservedhandover");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Reservedhandover");
				this.SetAttributeValue("cr4de_reservedhandover", value);
				this.OnPropertyChanged("cr4de_Reservedhandover");
			}
		}
		
		/// <summary>
		/// reserved act of picking up
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_reservedpickup")]
		public System.Nullable<System.DateTime> cr4de_Reservedpickup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cr4de_reservedpickup");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Reservedpickup");
				this.SetAttributeValue("cr4de_reservedpickup", value);
				this.OnPropertyChanged("cr4de_Reservedpickup");
			}
		}
		
		/// <summary>
		/// Return location
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_returnlocation")]
		public virtual cr4de_rent_cr4de_Returnlocation? cr4de_Returnlocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cr4de_rent_cr4de_Returnlocation?)(EntityOptionSetEnum.GetEnum(this, "cr4de_returnlocation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Returnlocation");
				this.SetAttributeValue("cr4de_returnlocation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("cr4de_Returnlocation");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_returnreport")]
		public Microsoft.Xrm.Sdk.EntityReference cr4de_Returnreport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cr4de_returnreport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_Returnreport");
				this.SetAttributeValue("cr4de_returnreport", value);
				this.OnPropertyChanged("cr4de_Returnreport");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Rent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<UDS.Study.cr4de_rentState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((UDS.Study.cr4de_rentState)(System.Enum.ToObject(typeof(UDS.Study.cr4de_rentState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Rent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual cr4de_rent_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cr4de_rent_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 cr4de_contact_cr4de_rent_Customer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_customer")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cr4de_contact_cr4de_rent_Customer")]
		public UDS.Study.Contact cr4de_contact_cr4de_rent_Customer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<UDS.Study.Contact>("cr4de_contact_cr4de_rent_Customer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_contact_cr4de_rent_Customer");
				this.SetRelatedEntity<UDS.Study.Contact>("cr4de_contact_cr4de_rent_Customer", null, value);
				this.OnPropertyChanged("cr4de_contact_cr4de_rent_Customer");
			}
		}
		
		/// <summary>
		/// N:1 cr4de_cr4de_car_cr4de_rent_Car
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_car")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cr4de_cr4de_car_cr4de_rent_Car")]
		public UDS.Study.cr4de_car cr4de_cr4de_car_cr4de_rent_Car
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<UDS.Study.cr4de_car>("cr4de_cr4de_car_cr4de_rent_Car", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_cr4de_car_cr4de_rent_Car");
				this.SetRelatedEntity<UDS.Study.cr4de_car>("cr4de_cr4de_car_cr4de_rent_Car", null, value);
				this.OnPropertyChanged("cr4de_cr4de_car_cr4de_rent_Car");
			}
		}
		
		/// <summary>
		/// N:1 cr4de_cr4de_carclass_cr4de_rent_CarClass
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_carclass")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cr4de_cr4de_carclass_cr4de_rent_CarClass")]
		public UDS.Study.cr4de_carclass cr4de_cr4de_carclass_cr4de_rent_CarClass
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<UDS.Study.cr4de_carclass>("cr4de_cr4de_carclass_cr4de_rent_CarClass", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_cr4de_carclass_cr4de_rent_CarClass");
				this.SetRelatedEntity<UDS.Study.cr4de_carclass>("cr4de_cr4de_carclass_cr4de_rent_CarClass", null, value);
				this.OnPropertyChanged("cr4de_cr4de_carclass_cr4de_rent_CarClass");
			}
		}
		
		/// <summary>
		/// N:1 cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_pickupreport")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport")]
		public UDS.Study.cr4de_cartransferreport cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<UDS.Study.cr4de_cartransferreport>("cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport");
				this.SetRelatedEntity<UDS.Study.cr4de_cartransferreport>("cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport", null, value);
				this.OnPropertyChanged("cr4de_cr4de_cartransferreport_cr4de_rent_Pickupreport");
			}
		}
		
		/// <summary>
		/// N:1 cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cr4de_returnreport")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport")]
		public UDS.Study.cr4de_cartransferreport cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<UDS.Study.cr4de_cartransferreport>("cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport");
				this.SetRelatedEntity<UDS.Study.cr4de_cartransferreport>("cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport", null, value);
				this.OnPropertyChanged("cr4de_cr4de_cartransferreport_cr4de_rent_Returnreport");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cr4de_rent(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["cr4de_rentid"] = base.Id;
                        break;
                    case "cr4de_rentid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}